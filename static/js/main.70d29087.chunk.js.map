{"version":3,"sources":["firebase.js","components/LogIn.js","components/LogOut.js","components/LargeHeader.js","components/RepoItem.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","onClickHandlerLogin","a","provider","GithubAuthProvider","addScope","signInWithPopup","then","result","token","credential","accessToken","user","catch","error","errorCode","code","message","email","alert","console","LogIn","props","className","type","id","onClick","this","value","Component","LogOut","LargeHeader","RepoItem","name","App","loadUserReposCallback","response","log","JSON","stringify","setState","repos","loadUserRepos","callback","xhttp","XMLHttpRequest","onreadystatechange","readyState","parse","responseText","open","setRequestHeader","state","send","setUserState","userGHLogin","login","userGHPic","avatar_url","userGH","url","userGHBio","bio","userGHReposUrl","repos_url","onClickHandler","requestUsername","onClickHandlerOut","isLoggedIn","signOut","func","username","userName","uid","userEmail","map","repo","key","onAuthStateChanged","userAuth","currentUser","displayName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d29087.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCqef48hVI-52yHHE5ZdVIpXtEIQFoie_Y\",\n  authDomain: \"git-social-v1.firebaseapp.com\",\n  databaseURL: \"https://git-social-v1.firebaseio.com\",\n  projectId: \"git-social-v1\",\n  storageBucket: \"git-social-v1.appspot.com\",\n  messagingSenderId: \"979995074373\",\n  appId: \"1:979995074373:web:a47830151a144caccea82c\"\n};\n\n\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport async function onClickHandlerLogin () {\n  var provider = new firebase.auth.GithubAuthProvider();\n\n  provider.addScope('repo');\n  provider.addScope('user');\n  var token;\n\n  await firebase.auth().signInWithPopup(provider).then(function (result) {\n    token = result.credential.accessToken;\n    // console.log(token);\n    var user = result.user;\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    var email = error.email;\n\n    var credential = error.credential;\n\n    if (errorCode === 'auth/account-exists-with-different-credential') {\n      alert('You have already signed up with a different auth provider for that email.');\n      // If you are using multiple auth providers on your app you should handle linking\n      // the user's accounts here.\n    } else {\n      console.error(error);\n    }\n  });\n  return token;\n\n\n}\n\nexport function onClickHandlerLogout() {\n \n  firebase.auth().signOut().then(function() {\n    // Sign-out successful.\n  }).catch(function(error) {\n    // An error happened.\n  });\n}\n","import React, {Component} from 'react'\nimport {onClickHandlerLogin} from '../firebase.js'\nimport './Log.css'\nimport { tsConstructorType } from '@babel/types';\n\n\nclass LogIn extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return(\n        <div className=\"login-container\">\n            \n            <h2>Login/Register</h2>\n            <input type=\"button\" className=\"login-input log-btn\" id=\"login-btn\" onClick={this.props.onClick} value=\"Login with GitHub\" />\n        </div>\n    );\n    }\n\n};\nexport default LogIn;","import React, {useState, Component} from 'react'\nimport './Log.css'\n\nclass LogOut extends Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return(\n        <div className=\"logout-container\">\n            <input type=\"button\" className=\"login-input log-btn\" id=\"login-btn\" onClick={this.props.onClick} value=\"Logout\" />\n        </div>\n    );\n    }\n\n};\nexport default LogOut;","import React, {Component} from 'react'\n\nclass LargeHeader extends Component {\n    render(){\n        return(\n            <div className=\"largeheader-container\">\n                <h1 className=\"large-text\">GitSocial</h1>\n            </div>\n        )\n    }\n}\nexport default LargeHeader;","import React, {Component} from 'react'\n\n\nclass RepoItem extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div>\n                <p>{this.props.name}</p>\n                <input type=\"button\" className=\"postRepoBtn\" value=\"Post\"></input>\n            </div>\n        );\n    }\n\n}\nexport default RepoItem;","import React, { Component } from 'react';\nimport './App.css';\nimport { auth } from \"./firebase\"\nimport LogIn from './components/LogIn';\nimport LogOut from './components/LogOut';\nimport LargeHeader from './components/LargeHeader';\nimport RepoItem from './components/RepoItem'\nimport {onClickHandlerLogin, onClickHandlerLogout} from './firebase.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      username: \"\",\n      userName: \"\",\n      uid: \"\",\n      userEmail: \"\",\n      accessToken: \"\",\n      repos: [],\n      userGHLogin: \"\",\n      userGHPic: \"\",\n      userGH: \"\",\n      userGHBio: \"\",\n      userGHReposUrl: \"\"\n\n    };\n  }\n\n  loadUserReposCallback = (response) => {\n    console.log(\"CALLBACK \" + JSON.stringify(response));\n    this.setState({repos: response});\n  }\n  loadUserRepos = () => {\n    var endpoint = \"https://api.github.com/user/repos?visibility=public\";\n    var callback = this.loadUserReposCallback;\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            callback(JSON.parse(this.responseText));\n        }\n        else{\n            console.log(\"Error\");\n        }\n    }\n    xhttp.open(\"GET\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+this.state.accessToken);\n    xhttp.send();\n  }\n\n  setUserState = (response) => {\n    this.setState({userGHLogin: response.login, userGHPic: response.avatar_url, userGH: response.url, userGHBio: response.bio, userGHReposUrl: response.repos_url});\n    this.loadUserRepos();\n    // this.loadUserRepos(response.repos_url);\n  }\n\n  onClickHandler = async () => {\n    var token = await onClickHandlerLogin();\n    this.setState({accessToken: token});\n    this.requestUsername(token);\n  }\n  onClickHandlerOut = async () => {\n    this.setState({isLoggedIn: false});\n    onClickHandlerLogout();\n  }\n\n  requestUsername = (token) => {\n    var func = this.setUserState;\n    var endpoint = \"https://api.github.com/user\";\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            func(JSON.parse(this.responseText));\n        }\n        else{\n            console.log(\"Error\");\n        }\n    }\n    xhttp.open(\"GET\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+token);\n    xhttp.send();\n  };\n  render() {\n    if (!this.state.isLoggedIn) {\n      return (\n        <div className=\"App\">\n          <LargeHeader/>\n          <LogIn onClick={this.onClickHandler} />\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"App\">\n        <LargeHeader/>\n          <div> User Logged in</div>\n          <LogOut onClick={this.onClickHandlerOut}/>\n          <div className=\"user-repos\">\n            {this.state.repos.map((repo) =>\n              <RepoItem key={repo.id} name ={repo.name}  />\n            )}\n          </div>\n        </div>\n      );\n\n    }\n\n  }\n  componentDidMount() {\n    auth.onAuthStateChanged(userAuth => {\n      if (auth.currentUser != null) {\n        var user = JSON.parse(JSON.stringify(userAuth));\n      // console.log(\"USER: \" + JSON.stringify(userAuth))\n      // console.log(\"UID: \"+userAuth.uid);\n      // console.log(\"Name: \" + userAuth.displayName);\n      // console.log(\"UserPic: \"+userAuth.photoURL);\n      // console.log(\"UserEmail: \"+userAuth.email);\n      // console.log(\"API key: \"+(JSON.stringify(user.stsTokenManager.apiKey)));\n        this.setState({ isLoggedIn: true, userName: userAuth.displayName, uid: userAuth.uid, userEmail:userAuth.email});\n        // requestRepos()\n        \n      }\n      else {\n        this.state = {\n          isLoggedIn: false,\n          username: \"\",\n          userName: \"\",\n          uid: \"\",\n          userEmail: \"\",\n          accessToken: \"\",\n          repos: [],\n          userGHLogin: \"\",\n          userGHPic: \"\",\n          userGH: \"\",\n          userGHBio: \"\",\n          userGHReposUrl: \"\"\n    \n        };\n      }\n\n    });\n\n    \n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}