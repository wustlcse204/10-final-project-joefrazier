{"version":3,"sources":["firebase.js","components/LogIn.js","components/LogOut.js","components/LargeHeader.js","components/RepoItem.js","components/Post.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","onClickHandlerLogin","a","provider","GithubAuthProvider","addScope","signInWithPopup","then","result","token","credential","accessToken","user","catch","error","errorCode","code","message","email","alert","console","LogIn","props","className","type","id","onClick","this","value","Component","LogOut","LargeHeader","RepoItem","handlePost","JSON","stringify","repo","log","name","owner","description","Post","renderReadme","repoID","readme","document","getElementById","innerHTML","src","ownerPic","href","link","App","getReadme","repoName","ghLogin","login","state","endpoint","xhttp","XMLHttpRequest","getReadmeCallback","onreadystatechange","readyState","open","setRequestHeader","send","response","readme1","parse","responseText","content","undefined","atob","readmeToHTML","stringReadme","body","addReadmeToDB","collection","doc","toString","set","ownerUID","uid","userGHPic","html_url","clone","clone_url","language","loadUserReposCallback","db","x","length","merge","loadUserRepos","callback","onClickHandler","setState","requestUsername","onClickHandlerOut","isLoggedIn","signOut","func","setUserState","userGHLogin","avatar_url","userGH","url","userGHBio","bio","userGHReposUrl","repos_url","postRepo","repoStr","renderPosts","postList","posts","renderRepoList","repoList","repos","username","userName","userEmail","map","post","key","renderPostsCallback","renderUserRepoListCallback","userRepoList","onAuthStateChanged","userAuth","currentUser","displayName","onSnapshot","snapshot","forEach","push","data","docChanges","change","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2a90e80.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCqef48hVI-52yHHE5ZdVIpXtEIQFoie_Y\",\n  authDomain: \"git-social-v1.firebaseapp.com\",\n  databaseURL: \"https://git-social-v1.firebaseio.com\",\n  projectId: \"git-social-v1\",\n  storageBucket: \"git-social-v1.appspot.com\",\n  messagingSenderId: \"979995074373\",\n  appId: \"1:979995074373:web:a47830151a144caccea82c\"\n};\n\n\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport async function onClickHandlerLogin () {\n  var provider = new firebase.auth.GithubAuthProvider();\n\n  // provider.addScope('repo:read');\n  provider.addScope('user:read');\n  var token;\n\n  await firebase.auth().signInWithPopup(provider).then(function (result) {\n    token = result.credential.accessToken;\n    // console.log(token);\n    var user = result.user;\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    var email = error.email;\n\n    var credential = error.credential;\n\n    if (errorCode === 'auth/account-exists-with-different-credential') {\n      alert('You have already signed up with a different auth provider for that email.');\n      // If you are using multiple auth providers on your app you should handle linking\n      // the user's accounts here.\n    } else {\n      console.error(error);\n    }\n  });\n  return token;\n\n\n}\n\nexport function onClickHandlerLogout() {\n \n  firebase.auth().signOut().then(function() {\n    // Sign-out successful.\n  }).catch(function(error) {\n    // An error happened.\n  });\n}\n","import React, {Component} from 'react'\nimport './Log.css'\n\n\nclass LogIn extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return(\n        <div className=\"login-container\">\n            <h2>Login/Register</h2>\n            <input type=\"button\" className=\"login-input log-btn\" id=\"login-btn\" onClick={this.props.onClick} value=\"Login with GitHub\" />\n        </div>\n    );\n    }\n\n};\nexport default LogIn;","import React, {Component} from 'react'\nimport './Log.css'\n\nclass LogOut extends Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return(\n        <div className=\"logout-container\">\n            <input type=\"button\" className=\"login-input log-btn\" id=\"login-btn\" onClick={this.props.onClick} value=\"Logout\" />\n        </div>\n    );\n    }\n\n};\nexport default LogOut;","import React, {Component} from 'react'\n\nclass LargeHeader extends Component {\n    render(){\n        return(\n            <div className=\"largeheader-container\">\n                <h1 className=\"large-text\">GitSocial</h1>\n            </div>\n        )\n    }\n}\nexport default LargeHeader;","import React, {Component} from 'react'\nimport './components.css'\n\nclass RepoItem extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    handlePost = () => {\n        this.props.onClick(JSON.stringify(this.props.repo));\n        console.log(this.props.repo);\n    }\n\n    render(){\n        return(\n            <div className=\"repo-item-container\">\n                <div className=\"repo-item-name\">{this.props.name}</div>\n                <div className=\"repo-item-owner\">{this.props.owner}</div>\n                <div className=\"repo-item-description\">{this.props.description}</div>\n                <input type=\"button\" className=\"postRepoBtn\" value=\"Post\" onClick={this.handlePost}></input>\n            </div>\n        );\n    }\n\n}\nexport default RepoItem;","import React, {Component} from 'react'\nimport './components.css'\n\nclass Post extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    renderReadme = () => {\n        var id = this.props.repoID;\n        var readme = this.props.readme;\n        console.log(this.props.readme);\n        document.getElementById(id).innerHTML = readme;\n    }\n\n    render(){\n        return(\n            <div className=\"post-item\">\n                <div className=\"post-header\">\n                    <div className=\"post-header-1\">\n                        <img className=\"post-owner-pic\" src={this.props.ownerPic}/>\n                    </div>\n                    <div className=\"post-header-2\">\n                        <div className=\"post-name\">{this.props.name}</div>\n                        <div className=\"post-owner\">{this.props.owner}</div>\n                        <div className=\"post-link\"><a className=\"post-link-href\" href={this.props.link}>View</a></div>\n                    </div>\n                   \n                    \n                \n                \n                </div>\n                <div className=\"post-readme\" id={this.props.repoID} >{this.props.readme}</div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        this.renderReadme();\n    }\n}\nexport default Post;","import React, { Component } from 'react';\nimport './App.css';\nimport { auth } from \"./firebase\"\nimport LogIn from './components/LogIn';\nimport LogOut from './components/LogOut';\nimport LargeHeader from './components/LargeHeader';\nimport RepoItem from './components/RepoItem'\nimport {onClickHandlerLogin, onClickHandlerLogout} from './firebase.js'\nimport { firestore } from './firebase';\nimport Post from './components/Post';\n// LOGIN\n// cse204testuser\n// csetuers240bas\n\n// mywustlcsetestuser@gmail.com\n// csetuers240bas\n// blah2103\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      username: \"\",\n      userName: \"\",\n      uid: \"\",\n      userEmail: \"\",\n      accessToken: \"\",\n      repos: [],\n      userGHLogin: \"\",\n      userGHPic: \"\",\n      userGH: \"\",\n      userGHBio: \"\",\n      userGHReposUrl: \"\",\n      posts: []\n\n    };\n  }\n\n// -------  POST README -----------\n\n  getReadme = (repo) => {\n    var repoName = repo.name;\n    var ghLogin =  repo.owner.login;\n    console.log(\"login: \" +ghLogin);\n    console.log(\"login: \" +repoName);\n    var token =this.state.accessToken;\n    // var endpoint = \"https://api.github.com/repos/\"+ghLogin+\"/\"+repoName+\"/contents/README.MD\";\n    var endpoint = \"https://api.github.com/repos/\"+ghLogin+\"/\"+repoName+\"/readme\";\n    var xhttp = new XMLHttpRequest();\n    var getReadmeCallback = this.getReadmeCallback;\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            getReadmeCallback(this, repo);\n        }\n        else{\n          console.log(this);\n            console.log(\"Repo does not contain a readme\");\n        }\n    }\n    xhttp.open(\"GET\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/vnd.github.v3.raw\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+token);\n    xhttp.send();\n}\n\ngetReadmeCallback = (response, repo) => {\n    var data = JSON.parse(response.responseText);\n    var readme1 = data.content;\n    if(readme1 !== undefined){\n      var readme = atob(readme1);\n      this.readmeToHTML(readme, repo);\n    }\n    else{\n      console.log(\"Get Readme Callback error\");\n    }\n}\n\nreadmeToHTML = (stringReadme, repo) => {\n    var endpoint = \"https://api.github.com/markdown\";\n    var body = { \"text\": stringReadme, \"mode\": \"markdown\"}\n    var addReadmeToDB = this.addReadmeToDB;\n    body = JSON.stringify(body);\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            addReadmeToDB(this.responseText, repo);\n        }\n        else{\n            console.log(\"Readme To Html Error\");\n        }\n    }\n    xhttp.open(\"POST\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"text/plain\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+this.state.accessToken);\n    xhttp.send(body);\n}\n\naddReadmeToDB = (readme, repo) =>{\n  console.log(\"Add read me\");\n  // var temp = document.createElement(\"div\");\n  // temp.innerHTML = readme;\n  // document.getElementById(\"post-container\").appendChild(temp);\n  var db = firestore;\n  db.collection(\"posts\").doc(repo.id.toString()).set({\n    repoID: repo.id,\n    readme: readme,\n    ownerUID: this.state.uid.toString(),\n    ownerPic: this.state.userGHPic,\n    repoName: repo.name,\n    owner: repo.owner.login,\n    link: repo.html_url,\n    clone: repo.clone_url,\n    language: repo.language,\n    description: repo.description\n  }).then(function(){\n    console.log(\"Readme posted successfully\");\n  });\n}\n\n// --------- LOAD REPOS ----------\n\n  loadUserReposCallback = (response) => {\n    var db = firestore;\n    for(var x = 0; x < response.length; ++x){\n      db.collection(this.state.uid.toString()).doc(response[x].id.toString()).set({\n        repoID: response[x].id.toString(),\n        repoName: response[x].name,\n        link: response[x].html_url,\n        description: response[x].description,\n        clone: response[x].clone_url,\n        language: response[x].language,\n        owner: response[x].owner.login,\n        ownerPic: this.state.userGHPic,\n        repo:response[x]\n      }, { merge: true }).then(function(){\n        console.log(\"success\");\n      });\n    }\n    // this.setState({repos: userRepos});\n  }\n  loadUserRepos = () => {\n    var endpoint = \"https://api.github.com/user/repos?visibility=public\";\n    var callback = this.loadUserReposCallback;\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            callback(JSON.parse(this.responseText));\n        }\n        else{\n            console.log(\"Error\");\n        }\n    }\n    xhttp.open(\"GET\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+this.state.accessToken);\n    xhttp.send();\n  }\n\n\n// --------  HANDLE LOGIN/LOGOUT  -----------\n\n  onClickHandler = async () => {\n    var token = await onClickHandlerLogin();\n    this.setState({accessToken: token});\n    this.requestUsername(token);\n  }\n  onClickHandlerOut = async () => {\n    this.setState({isLoggedIn: false});\n    onClickHandlerLogout();\n  }\n\n// ----------  GET USERNAME  ----------------\n  requestUsername = (token) => {\n    var func = this.setUserState;\n    var endpoint = \"https://api.github.com/user\";\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function(){\n        if(this.readyState === 4){\n            func(JSON.parse(this.responseText));\n        }\n        else{\n            console.log(\"Error\");\n        }\n    }\n    xhttp.open(\"GET\", endpoint, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"Authorization\", \"token \"+token);\n    xhttp.send();\n  };\n\n  setUserState = (response) => {\n    this.setState({userGHLogin: response.login, userGHPic: response.avatar_url, userGH: response.url, userGHBio: response.bio, userGHReposUrl: response.repos_url});\n    this.loadUserRepos();\n  }\n\n\n  postRepo = (repoStr) => {\n    var repo = JSON.parse(repoStr);\n    this.getReadme(repo);\n  }\n\n\n\n\n  render() {\n    if (!this.state.isLoggedIn) {\n      return (\n        <div className=\"App\">\n          <LargeHeader/>\n          <LogIn onClick={this.onClickHandler} />\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"App\">\n        <LargeHeader/>\n          <LogOut onClick={this.onClickHandlerOut}/>\n          <div className=\"main-container\">\n          <div id=\"post-container\">\n            {this.state.posts.map((post) =>\n              <Post key={post.repoID} repoID={post.repoID} name={post.repoName} owner={post.owner} readme={post.readme} ownerPic={post.ownerPic} link={post.link} />\n            )}\n          </div>\n          <div className=\"user-repos\">\n            {this.state.repos.map((repo) =>\n              <RepoItem key={repo.repoID} name ={repo.repoName} owner={repo.owner} description={repo.description} repo={repo.repo} onClick={this.postRepo} />\n            )}\n          </div>\n          </div>\n        </div>\n      );\n\n    }\n\n  }\n\n\n  renderPosts = (postList) => {\n    console.log(\"LISTS: \" + JSON.stringify(postList[0]));\n    this.setState({posts: postList});\n  }\n\n  renderRepoList = (repoList) => {\n    this.setState({repos: repoList});\n  }\n\n  componentDidMount() {\n    //GET CURRENT POSTS\n    var db = firestore;\n    var postList = [];\n    var renderPostsCallback = this.renderPosts;\n    var renderUserRepoListCallback = this.renderRepoList;\n    var userRepoList = [];\n    \n    auth.onAuthStateChanged(userAuth => {\n      postList = [];\n      if (auth.currentUser !== null) {\n        var user = JSON.parse(JSON.stringify(userAuth));\n        this.setState({ isLoggedIn: true, userName: userAuth.displayName, uid: userAuth.uid, userEmail:userAuth.email});   \n\n        db.collection(\"posts\").onSnapshot(function(snapshot){  \n          postList = [];\n          snapshot.forEach(function(doc){\n            // if (change.type === \"added\") {\n              postList.push(doc.data());\n            // }\n          });\n          console.log(\"SETTING POST LIST\");\n          renderPostsCallback(postList);\n        }); \n      \n        db.collection(userAuth.uid).onSnapshot(function(snapshot){\n          userRepoList = [];\n          snapshot.docChanges().forEach(function(change){\n            // if(change.type === \"added\"){\n              userRepoList.push(change.doc.data());\n            // }\n          });\n          renderUserRepoListCallback(userRepoList);\n        })\n      }\n      else {\n        this.setState({\n          isLoggedIn: false,\n          username: \"\",\n          userName: \"\",\n          uid: \"\",\n          userEmail: \"\",\n          accessToken: \"\",\n          repos: [],\n          userGHLogin: \"\",\n          userGHPic: \"\",\n          userGH: \"\",\n          userGHBio: \"\",\n          userGHReposUrl: \"\"\n    \n        });\n      }\n\n    });\n\n    \n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}